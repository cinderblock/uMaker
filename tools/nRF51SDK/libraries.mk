


NRF51_SRCDIR ?= $(NRF51_BASEDIR)components/

# This matches the folder name that Nordic assigns
NRF51_LIBRARIES ?= libraries

NRF51_LIBRARIES_SRCDIR ?= $(NRF51_SRCDIR)$(NRF51_LIBRARIES)/

NRF51_LIBRARIES_BLDDIR ?= $(BLD_DIR)nRF51/$(NRF51_LIBRARIES)/

# Names of nRF51 source files to "find" and include
NRF51_LIBRARIES_C ?= *

NRF51_LIBRARIES_SRC_FILES ?= $(NRF51_LIBRARIES_C:%=%.c)

# TODO: Change so that it only happens if NRF51_LIBRARIES_C is still default
# If the user isn't using an ANT soft device, don't build ANT things
ifeq (,$(filter $(NRF51_SOFTDEVICE_VERSION),s210 s310))
 NRF51_LIBRARIES_SRC_FILES_AUTO_FILTER += %ant_fs/antfs.c
endif

# If the user isn't using an BLE soft device, don't build the bootloader stuff
ifeq (,$(filter $(NRF51_SOFTDEVICE_VERSION),s110 s120 s130 s210 s310))
 NRF51_LIBRARIES_SRC_FILES_AUTO_FILTER += $(NRF51_LIBRARIES_SRCDIR)bootloader_dfu/%
endif

# Filter arm (aka KEIL I think?) sources
NRF51_LIBRARIES_SRC_KEIL_FILTER ?= %arm.c

NRF51_LIBRARIES_SRC_FILTER_HCI_USER_BOARDS ?= %hci/hci_slip.c %hci/hci_transport.c
NRF51_LIBRARIES_SRC_USERBOARDS_FILTER ?= %bootloader_dfu/dfu_transport_ble.c $(NRF51_LIBRARIES_SRC_FILTER_HCI_USER_BOARDS)

# Filter some sources that are provided for RTOSes
NRF51_LIBRARIES_SRC_FILTER_OTHER ?= %timer/app_timer_freertos.c %timer/app_timer_rtx.c

# BUGFIX: Broken nRF51 sources
NRF51_LIBRARIES_SRC_FILES_OLD ?= %console/console.c

# Filter certain sources by default
NRF51_LIBRARIES_SRC_FILES_FILTER ?= $(NRF51_LIBRARIES_SRC_FILTER_OTHER) $(NRF51_LIBRARIES_SRC_FILES_OLD) $(NRF51_LIBRARIES_SRC_FILES_AUTO_FILTER) $(NRF51_LIBRARIES_SRC_KEIL_FILTER) $(NRF51_LIBRARIES_SRC_USERBOARDS_FILTER)

NRF51_LIBRARIES_SRC_FILES_FULL ?= $(filter-out $(NRF51_LIBRARIES_SRC_FILES_FILTER),$(foreach file,$(NRF51_LIBRARIES_SRC_FILES),$(shell find $(NRF51_LIBRARIES_SRCDIR) -type f -name $(file))))

NRF51_LIBRARIES_AR ?= nRF51-$(NRF51_LIBRARIES).a

NRF51_LIBRARIES_OBJS ?= $(NRF51_LIBRARIES_SRC_FILES_FULL:$(NRF51_LIBRARIES_SRCDIR)%=$(NRF51_LIBRARIES_BLDDIR)%.o)

NRF51_LIBRARIES_OUT ?= $(BLD_LIBDIR)$(NRF51_LIBRARIES_AR)

NRF51_LIBRARIES_GCCFLAGS_FINAL ?= $(BLD_GCCFLAGS_FINAL) $(NRF51_LIBRARIES_GCCFLAGS_EXTRA)

AUTO_LIB += $(NRF51_LIBRARIES_OUT)

NRF51_LIBRARIES_TARGET ?= nRF51/libraries

AUTO_GENERATED_FILES += $(NRF51_LIBRARIES_OUT) $(NRF51_LIBRARIES_OBJS) $(NRF51_LIBRARIES_DEPFILES)

##### Targets

$(NRF51_LIBRARIES_BLDDIR)%.c.o: $(NRF51_LIBRARIES_SRCDIR)%.c
	$(ECO) "nRF51 C	$@"
	$(BLD_GCC) $< -o $@ -c $(NRF51_LIBRARIES_GCCFLAGS_FINAL)

$(NRF51_LIBRARIES_OUT): $(NRF51_LIBRARIES_OBJS)
	$(ECO) "nRF51 AR	$@"
	$(BLD_ARR) $@ $(NRF51_LIBRARIES_OBJS)

$(NRF51_LIBRARIES_OUT) $(NRF51_LIBRARIES_OBJS): $(MAKEFILE_LIST)

$(NRF51_LIBRARIES_TARGET): $(NRF51_LIBRARIES_OUT)

.PHONY: $(NRF51_LIBRARIES_TARGET)
.PRECIOUS: $(NRF51_LIBRARIES_OBJS)
.SECONDARY: $(NRF51_LIBRARIES_OUT)

# Explicitly include all our build dep files
NRF51_LIBRARIES_DEPFILES = $(NRF51_LIBRARIES_OBJS:$(BLD_DIR)%=$(BLD_DEPDIR)%.d)
-include $(NRF51_LIBRARIES_DEPFILES)
